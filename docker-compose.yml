networks:
  wsnet:
    # 自定义的网络名称，通过 docker network ls 查看 name
    name: websshnet
    # 开启ipv6
    enable_ipv6: true
  ngnet:
    name: nginxnet

services:
  webssh:
    # 如果镜像存在于 docker hub 上就会拉取（当拉取成功时，就会使用此镜像创建容器），不管上下文有没有 build 项
    # 如果 docker hub 上没有此镜像(或者有，但因为权限问题未能下载)，且上下文中有 build 项，会作为即将被创建的镜像名称
    image: ws:one
    build:
      # 表示与本文件同目录
      context: .
      # 创建镜像的文本名称
      dockerfile: Dockerfile
    # --net host 模式 使用宿主机的网络环境，宿主机有 ipv4 和 ipv6，webssh 容器就不需要再开启 ipv6(也不需要再映射端口)
    #network_mode: host
    ports:
        - "8888:8888"
    container_name: ws
    restart: always
    networks:
        - wsnet

  nginx:
    image: nginx:1.25-alpine
    # 映射端口 【宿主机端口:容器端口】
    ports:
        - "80:80"
    container_name: ng
    volumes:
        - ./default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    networks:
        - ngnet
